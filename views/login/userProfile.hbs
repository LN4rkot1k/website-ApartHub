<div class="container user-profile">
    <div class="row">
        <div class="col-md-3">
            <div class="sidebar">
                <h4>Личный кабинет</h4>
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link" id="add-apartment-link" href="#">Добавить объявление</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="delete-apartment-link" href="#">Модерировать объявления</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/profile/edit">Редактировать профиль</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="deleteProfileBtn" href="#">Удалить профиль</a>
                    </li>
                </ul>
            </div>
        </div>
        <div class="col-md-9">
            <div class="content card-like">
                <h4>Добро пожаловать, {{user.name}}!</h4>
                <div id="add-apartment-form">
                    <h3>Добавить объявление</h3>
                    <form id="apartment-form" enctype="multipart/form-data">
                        <div class="form-group">
                            <label for="address">Адрес квартиры:</label>
                            <input type="text" class="form-control" id="address" name="address"
                                placeholder="Например: Челябинск, ул. Лесопарковая, д. 60"
                                title="Введите адрес в формате: Челябинск, ул. Лесопарковая д. 60"
                                required>
                        </div>

                        <div class="form-group">
                            <label for="complex">ЖК (если есть):</label>
                            <select class="form-control" id="complex" name="complex_id">
                                <option value="">Выберите ЖК</option>
                                
                            </select>
                        </div>

                        <div class="form-group">
                            <label for="floor">Этаж квартиры:</label>
                            <input type="number" class="form-control" id="floor" name="floor"
                            placeholder="Например: 5"
                            required>
                        </div>

                        <div class="form-group">
                            <label for="rooms">Количество комнат:</label>
                            <input type="number" class="form-control" id="rooms" name="rooms"
                            placeholder="Например: 2"
                            required>
                        </div>

                        <div class="form-group">
                            <label for="area">Площадь квартиры:</label>
                            <input type="number" class="form-control" id="area" name="area"
                            placeholder="Максимальная площадь: 200 м²"
                            required>
                        </div>

                        <div class="form-group">
                            <label for="photos">Фотографии квартиры:</label>
                            <div class="custom-file-upload">
                                <button type="button" id="customPhotoButton" class="btn btn-secondary">Загрузить фотографии</button>
                                <span id="file-names">Файлы не выбраны</span>
                                <input type="file" id="photos" name="loadPhotos" multiple accept="image/jpeg,image/png, image/jpg" style="display: none;" required>
                            </div>
                            <small class="form-text text-muted">Выберите несколько фотографий квартиры.</small>
                        </div>

                        <div class="form-group">
                            <label for="price">Цена квартиры:</label>
                            <input type="number" class="form-control" id="price" name="price"
                            placeholder="Например: 1000000"
                            required>
                        </div>

                        <div class="form-group">
                            <label for="description">Описание квартиры:</label>
                            <textarea class="form-control" id="description" name="description" rows="10"
                            placeholder="Введите подробное описание квартиры (не более 1000 символов)"
                            required></textarea>
                            <small id="descriptionError" class="text-danger" style="display:none;">
                                Описание должно содержать от 20 до 1000 символов
                            </small>
                        </div>

                        <button type="submit" class="btn btn-primary">Добавить объявление</button>
                        <button type="button" class="btn btn-secondary" id="cancel-button">Отмена</button>
                    </form>
                </div>
                <div id="delete-apartment-section" style="display: none;">
                    <h3>Ваши объявления</h3>
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Адрес</th>
                                    <th>Комнаты</th>
                                    <th>Площадь</th>
                                    <th>Цена</th>
                                    <th>Действие</th>
                                </tr>
                            </thead>
                            <tbody id="user-apartments-body">
                                
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div id="deleteModal" class="modal" style="display:none;">
  <div class="modal-content">
    <p>Вы уверены, что хотите удалить профиль? Это удалит все связанные с вами объявления квартир.</p>
    <button id="confirmDeleteBtn" class="btn-delete-confirm">Удалить</button>
    <button id="cancelDeleteBtn" class="btn-cancel">Отмена</button>
  </div>
</div>



<script>
    document.addEventListener('DOMContentLoaded', function () {

        const deleteProfileBtn = document.getElementById('deleteProfileBtn');
        const modal = document.getElementById('deleteModal');
        const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
        const cancelDeleteBtn = document.getElementById('cancelDeleteBtn');

        deleteProfileBtn.addEventListener('click', () => {
            modal.style.display = 'flex';
        });

        cancelDeleteBtn.addEventListener('click', () => {
            modal.style.display = 'none';
        });

        // Закрыть модал при клике вне окна
        window.addEventListener('click', (event) => {
            if (event.target === modal) {
            modal.style.display = 'none';
            }
        });

        confirmDeleteBtn.addEventListener('click', async () => {
            try {
                const response = await fetch('/profile/delete', {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const result = await response.json();

                if (response.ok) {
                    alert(result.message);
                    window.location.href = '/';
                } else {
                    alert('Ошибка: ' + result.message);
                }
            } catch (error) {
                alert('Произошла ошибка при удалении профиля.');
                console.error(error);
            }
        });

        const addApartmentLink = document.getElementById('add-apartment-link');
        const addApartmentForm = document.getElementById('add-apartment-form');
        const cancelButton = document.getElementById('cancel-button');
        const apartmentForm = document.getElementById('apartment-form');

        const deleteApartmentLink = document.getElementById('delete-apartment-link');
        const deleteApartmentSection = document.getElementById('delete-apartment-section');

        addApartmentLink.addEventListener('click', function (event) {
            event.preventDefault();
            const visible = addApartmentForm.classList.contains('visible');
            addApartmentForm.classList.toggle('visible');
            addApartmentLink.classList.toggle('active', !visible);

            if (deleteApartmentSection.style.display === 'block') {
                deleteApartmentSection.style.display = 'none';
                deleteApartmentLink.classList.remove('active');
            }
        });

        cancelButton.addEventListener('click', function () {
            addApartmentForm.classList.remove('visible');
            addApartmentLink.classList.remove('active');
        });

        apartmentForm.addEventListener('submit', function (event) {
            event.preventDefault();
            const formData = new FormData(apartmentForm);
            fetch('/profile/apartments/add', {
                method: 'POST',
                body: formData,
            })
            .then(response => {
                if (response.ok) {
                    console.log('Объявление успешно добавлено!');
                    alert('Объявление создано. Ожидайте окончания модерации!');
                    addApartmentForm.classList.remove('visible');
                    addApartmentLink.classList.remove('active');
                    apartmentForm.reset();
                    document.getElementById('file-names').textContent = 'Файлы не выбраны';
                } else {
                    console.error('Ошибка при добавлении:', response.status);
                    alert("Ошибка при добавлении квартиры. Попробуйте снова");
                }
            })
            .catch(error => {
                console.error('Ошибка сети:', error);
            });
        });

        const photoInput = document.getElementById('photos');
        const customPhotoButton = document.getElementById('customPhotoButton');
        const fileNamesSpan = document.getElementById('file-names');

        const MAX_FILE_SIZE_MB = 10;
        const MAX_FILES = 10;

        customPhotoButton.addEventListener('click', function () {
            photoInput.click();
        });

        photoInput.addEventListener('change', function () {
            const files = Array.from(photoInput.files);

            if (files.length > MAX_FILES) {
                alert(`Можно загрузить не более ${MAX_FILES} файлов.`);
                photoInput.value = '';
                fileNamesSpan.textContent = 'Файлы не выбраны';
                return;
            }

            const invalidFiles = files.filter(file => {
                return !file.type.match(/^image\/(jpeg|png|jpg)$/) || file.size > MAX_FILE_SIZE_MB * 1024 * 1024;
            });

            if (invalidFiles.length > 0) {
                alert(`Некоторые файлы не подходят. Разрешены только изображения JPEG/PNG/JPG до ${MAX_FILE_SIZE_MB}MB.`);
                photoInput.value = '';
                fileNamesSpan.textContent = 'Файлы не выбраны';
                return;
            }

            const fileNames = files.map(f => f.name).join(', ');
            fileNamesSpan.textContent = fileNames || 'Файлы не выбраны';
        });


        fetch('/profile/complexes')
            .then(res => res.json())
            .then(data => {
                const complexSelect = document.getElementById('complex');
                if (complexSelect) {
                    data.forEach(complex => {
                        const option = document.createElement('option');
                        option.value = complex.complex_id;
                        option.textContent = complex.complex_title;
                        complexSelect.appendChild(option);
                    });
                }
            })
            .catch(error => console.error('Ошибка при загрузке ЖК:', error));

        // Валидация форм
        const addressInput = document.getElementById('address');
        addressInput.addEventListener('input', function() {
            this.value = this.value.replace(/[^А-Яа-яЁёA-Za-z0-9\s.,-]/g, '');
        });

        const floorInput = document.getElementById('floor');
        floorInput.addEventListener('input', function() {
            let val = this.value.replace(/\D/g, '');
            val = val.replace(/^0+/, '');
            if (val.length > 2) { val = val.slice(0, 2); }
            this.value = val;
        });

        const roomsInput = document.getElementById('rooms');
        roomsInput.addEventListener('input', function() {
            let val = this.value.replace(/\D/g, '');
            val = val.replace(/^0+/, '');
            if (val.length > 2) { val = val.slice(0, 2); }
            this.value = val;
        });

        const areaInput = document.getElementById('area');
        areaInput.addEventListener('input', function() {
            let val = this.value.replace(/\D/g, '');
            val = val.replace(/^0+/, '');
            if (val.length > 3) { val = val.slice(0, 3); }
            if (parseInt(val) > 200) { val = '200'; }
            this.value = val;
        });

        const priceInput = document.getElementById('price');
        priceInput.addEventListener('input', function() {
            let val = this.value.replace(/\D/g, '');
            val= val.replace(/^0+/, '');
            if (val.length > 9) val = val.slice(0, 9);
            if (parseInt(val) > 1000000000) val ='1000000000';
            this.value = val;
        });

        const descriptionInput = document.getElementById('description');
        const descriptionError = document.getElementById('descriptionError');
        descriptionInput.addEventListener('input', function() {
            const length = descriptionInput.value.trim().length;
            if (length < 20 || length > 1000) {
                descriptionInput.classList.add('is-invalid');
                descriptionError.style.display = 'block';
            } else {
                descriptionInput.classList.remove('is-invalid');
                descriptionError.style.display = 'none';
            }
        });
    });

    const deleteApartmentLink = document.getElementById('delete-apartment-link');
    const deleteApartmentSection = document.getElementById('delete-apartment-section');
    const addApartmentForm = document.getElementById('add-apartment-form');
    const addApartmentLink = document.getElementById('add-apartment-link');

    deleteApartmentLink.addEventListener('click', function (event) {
        event.preventDefault();

        const isVisible = deleteApartmentSection.style.display === 'block';
        deleteApartmentSection.style.display = isVisible ? 'none' : 'block';
        deleteApartmentLink.classList.toggle('active', !isVisible);

        if (addApartmentForm.classList.contains('visible')) {
            addApartmentForm.classList.remove('visible');
            addApartmentLink.classList.remove('active');
        }

        if (!isVisible) {
            fetch('/profile/apartments')
                .then(res => res.json())
                .then(data => {
                    const tbody = document.getElementById('user-apartments-body');
                    tbody.innerHTML = '';
                    if (data.length === 0) {
                        tbody.innerHTML = `<tr><td colspan="5">У вас пока нет объявлений.</td></tr>`;
                    } else {
                        data.forEach(apt => {
                            const tr = document.createElement('tr');
                            tr.innerHTML = `
                                <td>${apt.address}</td>
                                <td>${apt.rooms}</td>
                                <td>${apt.area} м²</td>
                                <td>${apt.price} ₽</td>
                                <td>
                                    <button class="btn btn-edit" data-id="${apt.apartment_id}">Изменить</button>
                                    <button class="btn btn-delete" data-id="${apt.apartment_id}">Удалить</button>
                                </td>
                            `;
                            tbody.appendChild(tr);
                        });
                    }
                })
                .catch(err => console.error('Ошибка загрузки объявлений:', err));
        }
    });


    document.getElementById('user-apartments-body').addEventListener('click', function(event) {
        if (event.target.classList.contains('btn-edit')) {
            const apartmentId = event.target.getAttribute('data-id');
            window.location.href = `/profile/apartments/${apartmentId}/edit`;
        }
    });


    document.addEventListener('click', function (event) {
    if (event.target.classList.contains('btn-delete')) {
        const apartmentId = event.target.getAttribute('data-id');

        fetch(`/profile/apartments/delete/${apartmentId}`, {
            method: 'POST',
        })
        .then(response => {
            if (response.ok) {
                alert('Объявление успешно удалено');
                event.target.closest('tr').remove(); 
            } else {
                alert('Ошибка при удалении объявления');
                console.error('Ошибка:', response.status);
            }
        })
        .catch(error => {
            console.error('Ошибка сети:', error);
            alert('Ошибка сети при удалении объявления');
        });
    }
});


</script>


